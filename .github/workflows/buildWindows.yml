name: build-and-test-Windows

run-name: "Build Windows: Push ${{ github.event.after }} by ${{ github.actor }}" 
on: [push]

jobs:
  build:
    name: Build DeepC Plugin for Nuke
    runs-on: windows-latest
    strategy:
      matrix:
        nuke-version: ["13.2v4"]
        #nuke-version: ["12.0v8", "12.1v5", "12.2v11", "13.0v10", "13.1v5", "13.2v4"]
    steps:
    - name: Checkout branch
      uses: actions/checkout@v2
    - name: Download Nuke
      run: |
          echo ${{ github.workspace }}
          curl https://thefoundry.s3.amazonaws.com/products/nuke/releases/${{ matrix.nuke-version }}/Nuke${{ matrix.nuke-version }}-win-x86_64.zip --output nuke.zip
    - name: Unzip Nuke
      shell: pwsh
      run: |
          mkdir nuke
          Expand-Archive -Force nuke.zip nuke
    - name: Install Nuke
      run: |
          cd nuke
          mkdir Nuke${{ matrix.nuke-version }}
          .\Nuke${{ matrix.nuke-version }}-win-x86_64.exe /S /ACCEPT-FOUNDRY-EULA /D=${{ github.workspace }}\nuke -RunAsAdmin
          cd ${{ github.workspace }}\nuke\Nuke${{ matrix.nuke-version }}
          dir
    - name: Get cmake
      uses: lukka/get-cmake@latest
    - name: Build DeepC for Nuke 
      run: | 
          mkdir build
          mkdir install
          cmake -S . -DCMAKE_INSTALL_PREFIX="./install" -DNuke_ROOT="${{ github.workspace }}/nuke/Nuke${{ matrix.nuke-version }}" -B "build"
          cmake --build "build" --config Release
          cmake --install "build"
    - name: Compress files
      shell: pwsh
      run:  Compress-Archive -LiteralPath "./install" -DestinationPath "./DeepC-Windows-Nuke${{ matrix.nuke-version }}.zip" -Force
    - name: Upload Deep artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: DeepC-Windows-Nuke${{ matrix.nuke-version }}
        path: "DeepC-*.zip"